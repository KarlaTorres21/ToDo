{"version":3,"sources":["components/Formulario/Formulario.module.css","App.module.css","components/Header/Header.module.css","components/Actions/Actions.module.css","components/UpdateTodo/UpdateTodo.module.css","components/Todo/Todo.module.css","assets/images/flowers.png","components/Header/Header.jsx","components/Actions/Actions.jsx","components/Formulario/Formulario.jsx","components/UpdateTodo/UpdateTodo.jsx","components/Todo/Todo.jsx","App.jsx","index.jsx"],"names":["module","exports","Header","className","styles","header","src","flowers","alt","Actions","handleActions","filters","map","actionToDo","onClick","Formulario","setListTodos","useState","textTodo","setTextTodo","onSubmit","event","preventDefault","length","newToDo","id","nanoid","description","currentList","type","value","placeholder","onChange","target","containerButton","buttonAdd","UpdateTodo","listTodos","setTodoUpdate","newTextTodo","setNewTextTodo","updateTodo","newTodos","todoItem","Todo","completed","deleteToDo","handleUpdateToDo","selectCheckbox","todo","checked","style","textDecoration","initialTodos","JSON","parse","localStorage","getItem","filterInitialState","FILTERS","All","Active","Completed","App","filterToDo","setFilterToDo","todoUpdate","useEffect","setItem","stringify","hadleDelete","todos","filter","handleCheckbox","handleUpdate","ReactDom","render","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,UAAY,gC,iBCApFD,EAAOC,QAAU,CAAC,MAAQ,qB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,KAAO,qB,oGCDV,MAA0B,oC,wBCW1BC,EARA,kBACX,0BAASC,UAAaC,IAAOC,OAA7B,UACI,qBAAKC,IAAKC,EAASC,IAAI,YACvB,2CACA,oE,iBCQOC,EAbC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAIf,OACI,yBAASP,UAAWC,IAAOO,QAA3B,SAHoB,CAAC,MAAO,SAAU,aAIjBC,KAAK,SAAAC,GAAU,OAC5B,yBAAyBC,QAAS,kBAAMJ,EAAcG,IAAtD,UAAoEA,EAApE,WAAaA,S,gCC0BdE,EA/BI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aAElB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAcA,OACI,uBAAMC,SATM,SAAAC,GAEZ,GADAA,EAAMC,mBACDJ,EAASK,OAAS,GAAvB,CACA,IAAMC,EAAU,CAACC,GAAIC,YAAO,GAAIC,YAAaT,GAC7CF,GAAc,SAAAY,GAAW,OAAKJ,GAAL,mBAAiBI,OAC1CT,EAAa,MAIb,UACI,uBACIU,KAAK,OACLC,MAAOZ,EACPa,YAAY,cACZC,SAlBM,SAAAX,GACdF,EAAaE,EAAMY,OAAOH,UAmBtB,qBAAK3B,UAAWC,IAAO8B,gBAAvB,SACI,wBAAQ/B,UAAWC,IAAO+B,UAA1B,uB,iBCYDC,EAtCI,SAAC,GAA8D,IAA5DX,EAA2D,EAA3DA,GAAIP,EAAuD,EAAvDA,SAAUmB,EAA6C,EAA7CA,UAAWrB,EAAkC,EAAlCA,aAAcsB,EAAoB,EAApBA,cAEzD,EAAsCrB,mBAASC,GAA/C,mBAAOqB,EAAP,KAAoBC,EAApB,KAsBA,OACI,uBAAMrC,UAAWC,IAAOqC,WAAxB,UACI,uBACIZ,KAAK,OACLC,MAAOS,EACPR,YAAY,cACZC,SA1BO,SAAAX,GACfmB,EAAgBnB,EAAMY,OAAOH,UA2BzB,wBAAQhB,QAxBS,SAAAO,GACrBA,EAAMC,iBACN,IAAMoB,EAAWL,EAAUzB,KAAK,SAAA+B,GAC5B,OAAIA,EAASlB,KAAOA,EACT,2BAAIkB,GAAX,IAAqBhB,YAAaY,IAE/BI,KAEX3B,EAAc0B,GACdJ,EAAe,KAeX,oBACA,wBAAQxB,QAbK,WACjBwB,EAAe,KAYX,wB,iBClBGM,EAhBF,SAAC,GAAkF,IAAhFnB,EAA+E,EAA/EA,GAAIE,EAA2E,EAA3EA,YAAakB,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,eAMtE,OACI,sBAAK7C,UAAWC,IAAO6C,KAAvB,UACI,uBAAOjB,SAAU,kBAAMgB,EAAevB,IAAKI,KAAK,WAAWqB,QAASL,IACpE,uBAAOM,MAAQN,EAPL,CACdO,eAAgB,gBAM2B,KAAvC,SAA8CzB,IAC9C,wBAAQb,QAAS,kBAAMiC,EAAiBtB,IAAxC,kBACA,wBAAQX,QAAS,kBAAMgC,EAAWrB,IAAlC,wBCJN4B,EAAeC,KAAKC,MAAMC,aAAaC,QAAS,cAAiB,MACjEC,EAAqBF,aAAaC,QAAS,eAAkB,MAE7DE,EAAU,CACZC,IAAK,kBAAM,GACXC,OAAQ,SAAAZ,GAAI,OAAKA,EAAKJ,WACtBiB,UAAW,SAAAb,GAAI,OAAIA,EAAKJ,YA6EbkB,EA1EH,WAER,MAAkC9C,mBAASoC,GAA3C,mBAAOhB,EAAP,KAAkBrB,EAAlB,KACA,EAAoCC,mBAAUyC,GAA9C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAoChD,mBAAS,IAA7C,mBAAOiD,EAAP,KAAmB5B,EAAnB,KAEA6B,qBAAW,WACPX,aAAaY,QAAS,YAAad,KAAKe,UAAUhC,MACnD,CAACA,IAEJ8B,qBAAW,WACPX,aAAaY,QAAS,aAAcJ,KACrC,CAACA,IAEJ,IAAMM,EAAc,SAAA7C,GAChBT,GAAc,SAAAuD,GAAK,OAAIA,EAAMC,QAAQ,SAAA7B,GAAQ,OAAIA,EAASlB,KAAOA,SAG/DgD,EAAiB,SAAAhD,GACnB,IAAMiB,EAAWL,EAAUzB,KAAK,SAAA+B,GAC5B,OAAIA,EAASlB,KAAOA,EACT,2BAAIkB,GAAX,IAAqBE,WAAYF,EAASE,YAEvCF,KAEX3B,EAAc0B,IAOZgC,EAAe,SAAAjD,GACjBa,EAAeb,IAGnB,OACI,iCACI,cAAC,EAAD,IACA,cAAC,EAAD,CACIT,aAAcA,IAElB,cAAC,EAAD,CACIN,cAfU,SAAAG,GAClBoD,EAAepD,MAgBX,yBAASY,GAAIrB,IAAOmE,MAApB,SACMlC,EAAUd,OAAS,EACjBc,EAAUmC,OAAQb,EAAQK,IAAcpD,KAAK,gBAAGa,EAAH,EAAGA,GAAIE,EAAP,EAAOA,YAAakB,EAApB,EAAoBA,UAApB,OACzCqB,IAAezC,EACf,cAAC,EAAD,CAEIA,GAAIA,EACJP,SAAUS,EACVU,UAAWA,EACXrB,aAAcA,EACdsB,cAAeA,GALVb,GAOR,cAAC,EAAD,CAEGA,GAAIA,EACJE,YAAaA,EACbkB,UAAWA,EACXC,WAAYwB,EACZvB,iBAAkB2B,EAClB1B,eAAgByB,GANXhD,MASX,oEClFtBkD,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.767fe872.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerButton\":\"Formulario_containerButton__1H5UV\",\"buttonAdd\":\"Formulario_buttonAdd__3dl6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"App_todos__1KsdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1LS3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"Actions_filters__2i-_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"updateTodo\":\"UpdateTodo_updateTodo__1fRFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__1zueQ\"};","export default __webpack_public_path__ + \"static/media/flowers.bc65bcd7.png\";","import flowers from \"../../assets/images/flowers.png\"\r\nimport styles from \"./Header.module.css\"\r\n\r\nconst Header = () => (\r\n    <section className = {styles.header}>\r\n        <img src={flowers} alt=\"flowers\"/>\r\n        <h1>ToDos app</h1>\r\n        <h3>What are we going to do today?</h3>\r\n    </section>\r\n)\r\n\r\nexport default Header;\r\n","import styles from \"./Actions.module.css\"\r\n\r\nconst Actions = ({ handleActions }) => {\r\n\r\n    const possibleActions = [\"All\", \"Active\", \"Completed\"]\r\n\r\n    return(\r\n        <section className={styles.filters}>\r\n            {possibleActions.map( actionToDo => \r\n                <button key={actionToDo} onClick={() => handleActions(actionToDo)}>{actionToDo} tasks</button>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Actions\r\n","import { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\"\r\nimport styles from \"./Formulario.module.css\"\r\n\r\nconst Formulario = ( {setListTodos}) => {\r\n\r\n    const [textTodo, setTextTodo] = useState(\"\");\r\n\r\n    const handleAdd = event => {\r\n        setTextTodo( event.target.value )\r\n    }\r\n\r\n    const addTodo = event => {\r\n        event.preventDefault()\r\n        if ( textTodo.length < 1 ) return\r\n        const newToDo = {id: nanoid(3), description: textTodo}\r\n        setListTodos( currentList => [newToDo, ...currentList] )\r\n        setTextTodo( \"\" )\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={addTodo}>\r\n            <input \r\n                type=\"text\" \r\n                value={textTodo} \r\n                placeholder=\"Tasks to do\"\r\n                onChange={handleAdd}\r\n            />\r\n            <div className={styles.containerButton}>\r\n                <button className={styles.buttonAdd}>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n","import { useState } from 'react'\r\nimport styles from './UpdateTodo.module.css'\r\n\r\nconst UpdateTodo = ({ id, textTodo, listTodos, setListTodos, setTodoUpdate }) => {\r\n\r\n    const [newTextTodo, setNewTextTodo] = useState(textTodo)\r\n\r\n    const updateText = event => {\r\n        setNewTextTodo( event.target.value )\r\n    }\r\n\r\n    const handleModifyText = event => {\r\n        event.preventDefault();\r\n        const newTodos = listTodos.map( todoItem => {\r\n            if( todoItem.id === id ){\r\n                return {...todoItem, description: newTextTodo}\r\n            }\r\n            return todoItem\r\n        })\r\n        setListTodos( newTodos )\r\n        setTodoUpdate( \"\" )\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setTodoUpdate( \"\" )\r\n    }\r\n\r\n    return(\r\n        <form className={styles.updateTodo}>\r\n            <input \r\n                type=\"text\" \r\n                value={newTextTodo} \r\n                placeholder=\"Tasks to do\"\r\n                onChange={updateText}\r\n            />\r\n            <button onClick={handleModifyText}>Modify</button>\r\n            <button onClick={handleDelete}>Cancel</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateTodo\r\n","import styles from \"./Todo.module.css\"\r\n\r\nconst Todo = ({ id, description, completed, deleteToDo, handleUpdateToDo, selectCheckbox }) => {\r\n    \r\n    const textStyle = {\r\n        textDecoration: \"line-through\"\r\n    }\r\n    \r\n    return(\r\n        <div className={styles.todo}>\r\n            <input onChange={() => selectCheckbox(id)} type=\"checkbox\" checked={completed}/>\r\n            <label style={ completed ? textStyle : null}>{description}</label>\r\n            <button onClick={() => handleUpdateToDo(id)}>Edit</button>\r\n            <button onClick={() => deleteToDo(id)}>Remove</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport styles from \"./App.module.css\"\r\nimport Header from \"./components/Header/Header\"\r\nimport Actions from \"./components/Actions/Actions\"\r\nimport Formulario from \"./components/Formulario/Formulario\"\r\nimport UpdateTodo from \"./components/UpdateTodo/UpdateTodo\"\r\nimport Todo from \"./components/Todo/Todo\"\r\n\r\nconst initialTodos = JSON.parse(localStorage.getItem( \"listTodos\" ) || \"[]\")\r\nconst filterInitialState = localStorage.getItem( \"filterToDo\" ) || \"All\"\r\n\r\nconst FILTERS = {\r\n    All: () => true,\r\n    Active: todo => !todo.completed,\r\n    Completed: todo => todo.completed\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [listTodos, setListTodos] = useState(initialTodos)\r\n    const [filterToDo, setFilterToDo] = useState( filterInitialState )\r\n    const [todoUpdate, setTodoUpdate] = useState(\"\")\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem( \"listTodos\", JSON.stringify(listTodos) )\r\n    }, [listTodos])\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem( \"filterToDo\", filterToDo )\r\n    }, [filterToDo])\r\n\r\n    const hadleDelete = id => {\r\n        setListTodos( todos => todos.filter( todoItem => todoItem.id !== id ) )\r\n    }\r\n\r\n    const handleCheckbox = id => {\r\n        const newTodos = listTodos.map( todoItem => {\r\n            if( todoItem.id === id ){\r\n                return {...todoItem, completed: !todoItem.completed}\r\n            }\r\n            return todoItem\r\n        })\r\n        setListTodos( newTodos )\r\n    }\r\n\r\n    const handleActions = actionToDo => {\r\n        setFilterToDo( actionToDo )\r\n    }\r\n\r\n    const handleUpdate = id => {\r\n        setTodoUpdate( id )\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <Header />\r\n            <Formulario \r\n                setListTodos={setListTodos}\r\n            />\r\n            <Actions\r\n                handleActions={handleActions}\r\n            />\r\n            <section id={styles.todos}>\r\n                { listTodos.length > 0 ?\r\n                    listTodos.filter( FILTERS[filterToDo] ).map( ({ id, description, completed }) => \r\n                        todoUpdate === id ? \r\n                        <UpdateTodo \r\n                            key={id}\r\n                            id={id}\r\n                            textTodo={description}\r\n                            listTodos={listTodos}\r\n                            setListTodos={setListTodos}\r\n                            setTodoUpdate={setTodoUpdate}\r\n                        />\r\n                        :<Todo \r\n                            key={id}\r\n                            id={id}\r\n                            description={description} \r\n                            completed={completed}\r\n                            deleteToDo={hadleDelete}\r\n                            handleUpdateToDo={handleUpdate}\r\n                            selectCheckbox={handleCheckbox}\r\n                        />\r\n                    ) \r\n                    : <p>There are no activities to do</p>\r\n                }\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render( <App />, document.getElementById(\"root\") )\r\n"],"sourceRoot":""}